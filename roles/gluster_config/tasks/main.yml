---

- name: Ensure Gluster brick and mount directories exist.
  file:
    path: "{{ brick_dir }}"
    state: directory
    owner: root
    mode: 0775

# Gluster volume configuration.
- name: Check if Gluster volumes already exist.
  shell: "gluster volume info"
  changed_when: false
  register: gluster_volume_info

- name: Connect to Gluster peers.
  shell: "gluster peer probe {{ host_vars[node].route }}"
  register: gluster_peer_probe
  changed_when: "'already in peer list' not in gluster_peer_probe.stdout"
  failed_when: false
  with_items: groups.gluster_nodes
  loop_control:
    loop_var: node
  when: "'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Create Gluster volume.
  shell: "gluster volume create {{ brick_name }} {{ lookup('template', '../../templates/{{ brick_type }}.j2') }}"
  register: gluster_volume_create
  changed_when: "'successful' in gluster_volume_create.stdout"
  when: "inventory_hostname == groups.gluster_nodes[0] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Ensure Gluster volume is started.
  shell: "gluster volume start {{ brick_name }}"
  register: gluster_volume_start
  changed_when: "'successful' in gluster_volume_start.stdout"
  when: "inventory_hostname == groups.gluster_nodes[0] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

# Mount configuration.
- name: Ensure the Gluster volume is mounted.
  mount:
    name: "{{ mount_dir }}"
    src: "{{ host_vars[groups.gluster_nodes[0]].route }}:/{{ gluster_brick_config.brick_name }}"
    fstype: glusterfs
    opts: "defaults,_netdev"
    state: mounted